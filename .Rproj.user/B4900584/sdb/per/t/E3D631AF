{
    "collab_server" : "",
    "contents" : "#' BW plot\n#'\n#' Function to plot the sensibility of RDD estimates to the bandwidth.\n#'\n#' @param x scores;\n#' @param y Dependent variable;\n#' @param c Cutpoint;\n#' @param p Poly order (default 1);\n#' @param triangular Triangular kernel? (default TRUE);\n#' @param h_bw Vector with initial, final and breaks to calculte the bandwidths;\n#' @param np Plot non-parametric estimates? (default FALSE).\n#'\n#' @import ggplot2\n#' @import Formula\n#'\n#' @export\n#'\n#' @return A ggplot object;\n\nplot_bw <- function(x, y, c = 0, p = 1, triangular = T, h_bw = NULL, np = FALSE){\n\n  # Input tests\n  if(!is.numeric(x) | !is.numeric(c)) stop(\"x and c must be numeric.\") else xc <- x - c\n  if(!is.numeric(h_bw) & !is.null(h_bw)) stop(\"h_bw must be numeric or NULL.\")\n  if(is.null(h_bw)){\n    qnts <- as.numeric(quantile(abs(xc), probs = seq(0, 1, by = 0.1), na.rm = T))\n    h_bw <- c(qnts[2], qnts[8], 50)\n    if(sum(abs(x[!is.na(xc)]) < qnts[2]) < 50) stop(\"At least 50 intervals required. Or use custem h_bw values instead.\")\n  }\n  if(length(h_bw) != 3) stop(\"h_bw must have length == 3.\")\n  if(length(x[!is.na(x)]) < h_bw[1]) stop(\"At least 50 intervals required.\")\n  h <- seq(h_bw[1], h_bw[2], length.out = h_bw[3])\n\n  # Calculate the estimates\n  coef <- ci_up <- ci_low <- numeric(length(h))\n  for (i in 1:length(h)){\n    reg <- rdd_loc(x = x, y = y, c = c, p = p, triangular = triangular, h = h[i])\n    coef[i] <- reg$coef\n    ci_up[i] <- reg$coef + 1.96 * reg$se\n    ci_low[i] <- reg$coef - 1.96 * reg$se\n  }\n\n  # Plots\n  out <- data.frame(coef = coef, ci_up = ci_up, ci_low = ci_low, h = h)\n\n  p1 <- ggplot2::ggplot(out, ggplot2::aes(x = h, y = coef)) + ggplot2::geom_line(size = 0.82) +\n    ggplot2::geom_ribbon(ggplot2::aes(ymin = ci_up, ymax = ci_low), alpha = 0.2) +\n    ggplot2::scale_y_continuous(expand = c(0, 0)) +\n    ggplot2::scale_x_continuous(expand = c(0, 0)) +\n    ggplot2::geom_hline(yintercept = c, linetype = \"dashed\", size = 0.3)\n\n\n  if(np){\n\n    coef2 <- ci_up2 <- ci_low2 <- numeric(length(h))\n    df <- data.frame(x = x, y = y, trat = x > 0)\n    for (i in 1:length(h)) {\n      dfbw <- df[abs(df$x) < h[i],]\n      reg <- rdd_np(y ~ trat, data = dfbw, h = h[i])\n      coef2[i] <- reg$coef\n      ci_up2[i] <- reg$coef + 1.96 * reg$se\n      ci_low2[i] <- reg$coef - 1.96 * reg$se\n    }\n\n    out2 <- data.frame(coef = coef2, ci_up = ci_up2, ci_low = ci_low2, h = h)\n    p1 <- p1 + ggplot2::geom_line(data = out2, aes(x = h, y = coef), size = 0.82, linetype = 2)\n  }\n\n  # Return\n  p1\n}\n",
    "created" : 1479652844353.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3874784474",
    "id" : "E3D631AF",
    "lastKnownWriteTime" : 1479653093,
    "last_content_update" : 1479653093524,
    "path" : "C:/Users/User/Google Drive/R/Pacotes/fmeireles/R/plot_bw.R",
    "project_path" : "R/plot_bw.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}